{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","ProfileInfo","profile","className","s","profile__wrapper","description","src","photos","large","Loader","Post","item","alt","post","message","span__wrapper","span","likeCount","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","placeholder","name","textarea","validate","required","btnPost","MyPosts","React","memo","postsElements","postData","map","p","postsBlock","postTitle","values","addPost","newPostText","posts","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","Component","compose","auth","isAuth","withRouter","WithAuthRedirect"],"mappings":"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","file":"static/js/3.003e0ba7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__wrapper\":\"ProfileInfo_profile__wrapper__2R8UX\",\"item\":\"ProfileInfo_item__3JWc_\",\"description\":\"ProfileInfo_description__3zsgT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1af7q\",\"posts\":\"MyPosts_posts__3VTu4\",\"postTitle\":\"MyPosts_postTitle__n9O-2\",\"btnPost\":\"MyPosts_btnPost__1oHy0\",\"textarea\":\"MyPosts_textarea__3u-lL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__12FDz\",\"span\":\"Post_span__iW3-k\",\"span__wrapper\":\"Post_span__wrapper__2AJYd\",\"post\":\"Post_post__28iOz\"};","import React, { useState, useEffect } from \"react\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n  let [status, setStatus] = useState(props.status);\r\n\r\n  useEffect( () => {\r\n        setStatus(props.status)\r\n  }, [props.status] );\r\n\r\n  const onActivateEditMode = () => {\r\n    setEditMode(true);\r\n  };\r\n\r\n  const onDeActivateEditMode = () => {\r\n    setEditMode(false);\r\n    props.updateUserStatus(status);\r\n  };\r\n\r\n  const onStatusChange = (e) => {\r\n    setStatus(e.currentTarget.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!editMode && (\r\n        <div>\r\n          <span onDoubleClick={onActivateEditMode}>\r\n            {props.status || \"-----\"}\r\n          </span>\r\n        </div>\r\n      )}\r\n      {editMode && (\r\n        <div>\r\n          <input\r\n            onChange={onStatusChange}\r\n            onBlur={onDeActivateEditMode}\r\n            autoFocus={true}\r\n            value={status}\r\n          />\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileStatusWithHooks;\r\n","import React from \"react\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport Loader from \"../../Loader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = (props) => {\r\n\r\n  if(!props.profile) {\r\n    return <Loader />\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>\r\n        <img src=\"https://avatars.mds.yandex.net/get-pdb/202366/a9bf969b-259c-4f89-ab25-314ba79e25ee/orig\" alt=\"avaAva\"></img>\r\n      </div> */}\r\n      <div className={s.profile__wrapper}>\r\n        <div className = {s.description}>\r\n          <img src={props.profile.photos.large}/>\r\n          <ProfileStatusWithHooks \r\n            status={props.status}\r\n            updateUserStatus={props.updateUserStatus}\r\n            />\r\n          </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\nconst Post = (props) => {\r\n  return (\r\n  <div className={s.item}>\r\n    <img src='https://w0.pngwave.com/png/85/114/avatar-user-profile-male-logo-profile-icon-png-clip-art.png' alt='Avatar'></img>\r\n      <div className={s.post}>\r\n          {props.message}\r\n      </div>\r\n      <div className={s.span__wrapper}>\r\n      <span className={s.span}>like</span>\r\n      {props.likeCount}\r\n      <span className={s.span}>dislike</span>\r\n  </div>\r\n  </div>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport s from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\nimport { required, maxLengthCreator } from \"../../../Utils/Validators/validators\";\r\nimport { Textarea } from \"../../Common/FormsControl/FormsControl\";\r\n\r\n// import {addPostActionCreator, updateNewPostTextActionCreator} from '../../../../src/redux/profileReducer';\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nlet AddNewPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field\r\n          component={Textarea}\r\n          placeholder=\"Write your post here\"\r\n          name=\"newPostText\"\r\n          className={s.textarea}\r\n          validate={[required, maxLength10]}\r\n        />\r\n      </div>\r\n      <div>\r\n        <button className={s.btnPost}>\r\n          Add post\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nlet AddNewPostFormRedux = reduxForm({ form: \"ProfileAddNewPostForm\" })(AddNewPostForm)\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n  // shouldComponentUpdate(nextProps, nextState) {\r\n  //   return nextProps != this.props || nextState != this.state;\r\n  // }\r\n\r\n    let postsElements = props.postData.map((p) => (\r\n      <Post message={p.message} likeCount={p.likeCount} />\r\n    ));\r\n  \r\n    // let newPostElement = React.createRef();\r\n  \r\n    let onAddPost = (values) => {\r\n      props.addPost(values.newPostText);\r\n    };\r\n\r\n\r\n    return (\r\n      <div className={s.postsBlock}>\r\n        <h3 className={s.postTitle}>My posts</h3>\r\n        <AddNewPostFormRedux onSubmit={onAddPost} />\r\n        <div className={s.posts}>{postsElements}</div>\r\n      </div>\r\n    );\r\n  \r\n  });\r\n  \r\n\r\nexport default MyPosts;\r\n","import React from \"react\";\r\nimport { addPostActionCreator } from \"../../../redux/profileReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from 'react-redux';\r\n\r\n// const MyPostsContainer = (props) => {\r\n\r\n//   let state = props.store.getState();\r\n\r\n//   let addPost = () => {\r\n//     // let text = newPostElement.current.value;\r\n//     props.store.dispatch(addPostActionCreator());\r\n//     // props.addPost();\r\n//   };\r\n\r\n//   let onPostChange = (text) => {\r\n//     // let text = newPostElement.current.value;\r\n//     props.store.dispatch(updateNewPostTextActionCreator(text));\r\n//     // props.updateNewPostText(text);\r\n//   };\r\n\r\n//   return (\r\n//     <MyPosts\r\n//       updateNewPostText={onPostChange}\r\n//       addPost={addPost}\r\n//       postData={state.profilePage.postData}\r\n//       newPostText={state.profilePage.newPostText}\r\n//     />\r\n//   );\r\n// };\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    postData: state.profilePage.postData,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText));\r\n    }\r\n  }  \r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;\r\n","import React from \"react\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Profile = (props) => {\r\n\r\n  // if(props.isAuth === false) {\r\n  //   return <Redirect to='/login'></Redirect>\r\n  // }\r\n  return (\r\n      <div>\r\n        <ProfileInfo \r\n          profile={props.profile}\r\n          status={props.status}\r\n          updateUserStatus={props.updateUserStatus}/>\r\n        <MyPostsContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\nimport { getUserProfile, getUserStatus, updateUserStatus } from \"../../redux/profileReducer\";\r\nimport { withRouter, Redirect } from \"react-router-dom\";\r\nimport { WithAuthRedirect } from \"../../hoc/WithAuthRedirect\";\r\nimport { compose } from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if(!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getUserStatus(userId);\r\n  }\r\n  render() {\r\n      return (\r\n      <div>\r\n       <Profile  \r\n        {...this.props} \r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateUserStatus={this.props.updateUserStatus}/>\r\n    </div>\r\n  );\r\n};\r\n  }\r\n\r\n  let mapStateToProps = (state) => {\r\n    return{\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authorizedUserId: state.auth.userId,\r\n      isAuth: state.auth.isAuth\r\n    }\r\n  };\r\n\r\n  export default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}),\r\n    withRouter,\r\n    WithAuthRedirect\r\n  )(ProfileContainer)\r\n\r\n  //let AuthRedirectComponent = WithAuthRedirect(ProfileContainer); // это HOC\r\n\r\n \r\n\r\n\r\n"],"sourceRoot":""}